#!/usr/bin/env ruby

require "keeptesting"
require "optparse"
require 'fssm'

def parse_options
  options = {}

  OptionParser.new do |o|
    o.banner = "Usage: keeptesting [options] -f 'FAILURE-MATCHING-REGEX' -t 'TEST-COMMAND'"
    
    o.on("-f F", "--failure-matching-regex", "A regex that matches failing tests") { |f| options[:failure_regex] = f } 
    o.on("-t T", "--test-command", "Command to start your test(s)") { |t| options[:test_command] = t }
    
    o.on("-h", "--help", "Help page") { puts o; exit }
    o.on("-v", "--version", "Spit out version") { |b| puts Keeptesting::VERSION; exit }

    o.parse!
  end

  return options
end

def test_success?(test_output, failure_regex)
  true unless test_output =~ /#{failure_regex}/
end

def testrun(options)
  puts `clear`
  puts "RUNNING TESTS..."
  
  cmd = options[:test_command]
  test_output = `#{cmd}`
  test_succeded = test_success?(test_output, options[:failure_regex])
  puts `clear`
  if test_succeded
    puts "SUCCESS!\n\n\n"
  else
    puts "FAILURE!\n\n\n"
  end

  puts test_output
end 

def start_test_loop(options)
  testrun(options)
  FSSM.monitor('.', '**/*') do
    update {|base, relative| testrun(options)}
    delete {|base, relative| testrun(options)}
    create {|base, relative| testrun(options)}
  end
end

options = parse_options

if !options[:failure_regex] || !options[:test_command]
  puts "ERROR: missing args!" # TODO do this in optionsparse step above
end

start_test_loop(options)

